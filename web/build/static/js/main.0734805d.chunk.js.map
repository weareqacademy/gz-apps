{"version":3,"sources":["services/api.ts","contexts/auth.tsx","components/InputFloatLabel/styles.ts","components/InputFloatLabel/index.tsx","components/Checkbox/styles.ts","components/Checkbox/index.tsx","pages/Login/styles.ts","pages/Login/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Success/styles.ts","pages/Success/index.tsx","pages/NotFound/styles.ts","pages/NotFound/index.tsx","routes/sign.routes.tsx","components/Input/styles.ts","components/Input/index.tsx","components/PageHeader/styles.ts","components/PageHeader/index.tsx","components/Textarea/styles.ts","components/Textarea/index.tsx","components/Select/styles.ts","components/Select/index.tsx","pages/Profile/styles.ts","pages/Profile/index.tsx","pages/Landing/styles.ts","pages/Landing/index.tsx","components/GeekItem/styles.ts","components/GeekItem/index.tsx","pages/GeekList/styles.ts","pages/GeekList/index.tsx","pages/GeekForm/styles.ts","pages/GeekForm/index.tsx","routes/auth.routes.tsx","routes/index.tsx","styles/Global.ts","App.tsx","index.tsx","assets/images/logo.svg","assets/images/icons/warning.svg","assets/images/icons/heart.svg","assets/images/icons/back-light.svg","assets/images/icons/success.svg","assets/images/bg.svg","assets/images/bg-lab.jpg","assets/images/success-background.svg","assets/images/icons/showPass.svg","assets/images/icons/hidePass.svg","assets/images/bg-geeks.jpg","assets/images/bg-find.jpg","assets/images/Background.svg","assets/images/icons/camera.svg","assets/images/icons/geeks.svg","assets/images/icons/cube.svg","assets/images/icons/logout.svg","assets/images/bg-geek.png","assets/images/icons/whatsapp.svg","assets/images/icons/emoji.svg","assets/images/icons/rocket.svg"],"names":["api","axios","create","baseURL","MySwal","withReactContent","Swal","AuthContext","createContext","AuthProvider","children","useState","user","setUser","a","email","password","checkbox","post","response","data","defaults","headers","Authorization","token","sessionStorage","setItem","JSON","stringify","length","localStorage","reason","error","message","fire","icon","title","text","clear","useEffect","getItem","storagedUser","storagedToken","parse","sessionUser","sessionToken","loadStoragedData","Provider","value","signed","signIn","signOut","useAuth","useContext","InputBlock","styled","div","Input","label","name","type","rest","inputRef","useRef","hidden","setHidden","isActive","setIsActive","useField","fieldName","defaultValue","registerField","ref","current","path","className","htmlFor","onChange","id","onClick","src","showPassIcon","hidePassIcon","alt","Container","Checkbox","options","inputRefs","getValue","refs","filter","checked","map","clearValue","forEach","setValue","values","includes","option","index","key","defaultChecked","find","dv","LoginPage","LogoContent","header","BG","LoginContent","main","Footer","footer","Login","formRef","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","validationErrors","inner","logoImg","onSubmit","to","heartIcon","SignUpPage","background","SignUpContent","SignUp","history","useHistory","min","lastname","push","console","log","backLightIcon","SuccessPage","bgLab","SuccessContent","bg","succesbg","Success","successIcon","pathname","SignRoutes","exact","component","render","props","NotFound","TopBar","Header","PageHeader","description","Message","location","useLocation","pageName","setPageName","backIcon","TextAreaBlock","Textarea","textAreaRef","SelectBlock","MySelect","select","Select","selectRef","disabled","GeekPage","GeekContent","AvatarFieldset","camera","FormFields","FormFooter","Geek","userData","setUserData","alertError","setAlertError","get","setData","split","whatsapp","is_geek","avatar","cost","work","desc","printer_repair","status","window","reload","getUserData","URL","test","put","then","result","isConfirmed","isDenied","toString","warningIcon","LandingPage","LandingContent","Content","Landing","setAvatar","geek","setGeek","getUser","logoutIcon","geeksIcon","addGeekIcon","HeartIcon","Item","article","GeekItem","toLowerCase","rel","target","href","whatsappIcon","ListPage","SearchGeek","Form","List","Pages","Pagination","GeekList","geeks","setGeeks","page","setPage","count","setCount","alertEmpty","setAlertEmpty","searchNotFound","setSearchNotFound","params","Geeks","Count","loadGeeks","searchGeeks","emoji","placeholder","Math","ceil","size","event","GeekFormPage","PageContent","GeekForm","goHorse","zapRequired","max","typeError","rocket","AuthRoutes","Profile","Routes","GlobalStyle","createGlobalStyle","App","Global","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0734805d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n});\r\n\r\nexport default api;\r\n","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport api from '../services/api';\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport interface FormData {\r\n  email: string;\r\n  password: string;\r\n  checkbox: Array<[]>;\r\n}\r\n\r\nexport interface UserData {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  avatar: string;\r\n  whatsapp: string;\r\n  is_geek: boolean;\r\n  desc: string;\r\n  printer_repair: string;\r\n  work: string;\r\n  cost: number;\r\n}\r\n\r\ninterface AuthContextData {\r\n  signed: boolean;\r\n  user: UserData | null;\r\n  signIn(data: FormData): Promise<void>;\r\n  signOut(): void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<UserData | null>(null);\r\n \r\n  useEffect(() => {\r\n    async function loadStoragedData() {\r\n      const storagedUser = await localStorage.getItem('@Getgeeks:user');\r\n      const storagedToken = await localStorage.getItem('@Getgeeks:token');\r\n  \r\n      if (storagedUser && storagedToken) {\r\n        setUser(JSON.parse(storagedUser));\r\n        api.defaults.headers.Authorization = `Bearer ${storagedToken}`;\r\n      } else {\r\n        const sessionUser = await sessionStorage.getItem('@Getgeeks:user');\r\n        const sessionToken = await sessionStorage.getItem('@Getgeeks:token');\r\n\r\n        if (sessionUser && sessionUser) {\r\n          setUser(JSON.parse(sessionUser));\r\n          api.defaults.headers.Authorization = `Bearer ${sessionToken}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    loadStoragedData();\r\n  }, []);\r\n\r\n  async function signIn({ email, password, checkbox }: FormData) {\r\n\r\n    try {\r\n      const response = await api.post('/sessions', {\r\n        email,\r\n        password,\r\n      })\r\n  \r\n      setUser(response.data.user);\r\n      api.defaults.headers.Authorization = `Bearer ${response.data.token}`;\r\n  \r\n      await sessionStorage.setItem(\r\n        '@Getgeeks:user',\r\n        JSON.stringify(response.data.user)\r\n      );\r\n      await sessionStorage.setItem('@Getgeeks:token', response.data.token);\r\n  \r\n      if (checkbox.length !== 0) {\r\n        await localStorage.setItem(\r\n          '@Getgeeks:user',\r\n          JSON.stringify(response.data.user)\r\n        );\r\n        await localStorage.setItem('@Getgeeks:token', response.data.token);\r\n      }\r\n    } catch(error) {\r\n\r\n      let message;\r\n\r\n      // console.log(error.response)\r\n\r\n      if (error.response && error.response.data) {\r\n        let reason: any = error.response.data.error;\r\n        if (reason === 'Invalid password' || reason === 'User does not exists')\r\n          message = 'Usuário e/ou senha inválidos.'\r\n        else\r\n          message = 'Ocorreu um erro muito estranho!'\r\n      }\r\n\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: message,\r\n      })\r\n\r\n      return error\r\n    }\r\n\r\n  }\r\n\r\n  async function signOut() {\r\n    await localStorage.clear();\r\n    await sessionStorage.clear();\r\n    setUser(null);\r\n    api.defaults.headers.Authorization = '';\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        signed: !!user,\r\n        user,\r\n        signIn,\r\n        signOut,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n\r\n  // console.log(context)\r\n\r\n  return context;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const InputBlock = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-top: 1px solid var(--color-line-in-white);\r\n  margin: 0;\r\n\r\n  &:first-child {\r\n    border-top: unset;\r\n    margin: unset;\r\n  }\r\n\r\n  &:focus-within::after {\r\n    width: 1.5px;\r\n    height: calc(100% - 1.6rem);\r\n    content: '';\r\n    background: var(--color-primary);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0.8rem;\r\n    bottom: 0.8;\r\n    border-radius: 0.8rem;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    pointer-events: none;\r\n    font-size: 1.4rem;\r\n    padding: 0 1.2rem;\r\n    font: 1.6rem Archivo;\r\n    color: var(--color-text-complement);\r\n\r\n    transform-origin: top left;\r\n    transform: translate(0, 2rem) scale(1);\r\n\r\n    transition: all 0.2s ease-out;\r\n  }\r\n\r\n  .Active {\r\n    transform: translate(0, 12px) scale(0.75);\r\n  }\r\n\r\n  &:focus-within label {\r\n    transform: translate(0, 12px) scale(0.75);\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 5.6rem;\r\n    background: var(--color-input-background);\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 1.4rem 1.6rem 0 1rem;\r\n    font: 1.6rem Archivo;\r\n  }\r\n\r\n  .input {\r\n    display: flex;\r\n\r\n    button {\r\n      background: none;\r\n      border: none;\r\n      margin-right: 1rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      outline: 0;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .error {\r\n    color: #ab3e3e;\r\n    font: 400 1.2rem Poppins;\r\n    margin: 0 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React, { InputHTMLAttributes, useRef, useEffect, useState } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { InputBlock } from './styles';\r\n\r\nimport showPassIcon from '../../assets/images/icons/showPass.svg';\r\nimport hidePassIcon from '../../assets/images/icons/hidePass.svg';\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  name: string;\r\n  type?: string;\r\n}\r\n\r\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  name,\r\n  type = 'text',\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [hidden, setHidden] = useState(true);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  function handleShowPass() {\r\n    setHidden(!hidden);\r\n  }\r\n\r\n  function handleTextChange() {\r\n    const text = inputRef.current?.value;\r\n\r\n    if (text !== '') {\r\n      setIsActive(true);\r\n    } else {\r\n      setIsActive(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <InputBlock>\r\n      {label && (\r\n        <label className={isActive ? 'Active' : ''} htmlFor={fieldName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n\r\n      <div className=\"input\">\r\n        <input\r\n          onChange={handleTextChange}\r\n          type={type === 'password' ? (hidden ? 'password' : 'text') : type}\r\n          id={fieldName}\r\n          ref={inputRef}\r\n          defaultValue={defaultValue}\r\n          {...rest}\r\n        />\r\n\r\n        {name === 'password' && (\r\n          <button type=\"button\" onClick={handleShowPass}>\r\n            <img\r\n              src={hidden ? showPassIcon : hidePassIcon}\r\n              alt=\"Mostrar senha\"\r\n            />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {error && <span className=\"error\">{error}</span>}\r\n    </InputBlock>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    font: 400 14px Poppins;\r\n    color: var(--color-text-complement);\r\n    margin-left: 10px;\r\n\r\n    .check {\r\n      margin-right: 0.8rem;\r\n      border-radius: 0.8rem;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React, { InputHTMLAttributes, useRef, useEffect } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  options: {\r\n    id: string;\r\n    value: string;\r\n    label: string;\r\n  }[];\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({ name, options, ...rest }) => {\r\n  const inputRefs = useRef<HTMLInputElement[]>([]);\r\n  const { fieldName, registerField, defaultValue = [] } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRefs.current,\r\n      getValue: (refs: HTMLInputElement[]) => {\r\n        return refs.filter((ref) => ref.checked).map((ref) => ref.value);\r\n      },\r\n      clearValue: (refs: HTMLInputElement[]) => {\r\n        refs.forEach((ref) => {\r\n          ref.checked = false;\r\n        });\r\n      },\r\n      setValue: (refs: HTMLInputElement[], values: string[]) => {\r\n        refs.forEach((ref) => {\r\n          if (values.includes(ref.id)) {\r\n            ref.checked = true;\r\n          }\r\n        });\r\n      },\r\n    });\r\n  }, [defaultValue, fieldName, registerField]);\r\n\r\n  return (\r\n    <Container>\r\n      {options.map((option, index) => (\r\n        <label htmlFor={option.id} key={option.id}>\r\n          <input\r\n            className=\"check\"\r\n            defaultChecked={defaultValue.find((dv: string) => dv === option.id)}\r\n            ref={(ref) => {\r\n              inputRefs.current[index] = ref as HTMLInputElement;\r\n            }}\r\n            value={option.value}\r\n            type=\"checkbox\"\r\n            id={option.id}\r\n            {...rest}\r\n          />\r\n          {option.label}\r\n        </label>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import styled from 'styled-components';\r\nimport BG from '../../assets/images/bg-geeks.jpg';\r\n\r\nexport const LoginPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    display: grid;\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-areas: 'logo content';\r\n  }\r\n`;\r\n\r\nexport const LogoContent = styled.header`\r\n  width: 100vw;\r\n  height: 40vh;\r\n  background-image: url(${BG});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-color: var(--color-primary);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 1100px) {\r\n    grid-area: logo;\r\n    background-position: center;\r\n    background-size: cover;\r\n    height: 100vh;\r\n    width: 60vw;\r\n  }\r\n\r\n  .logo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    img {\r\n      width: 33rem;\r\n      margin-bottom: 0.8rem;\r\n    }\r\n\r\n    span {\r\n      font: 400 2.1rem Poppins;\r\n      color: var(--color-text-in-primary);\r\n      max-width: 20rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LoginContent = styled.main`\r\n  width: 90vw;\r\n  height: 60vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    grid-area: content;\r\n    height: 100vh;\r\n    width: 40vw;\r\n    justify-content: center;\r\n  }\r\n\r\n  form {\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n    max-width: 350px;\r\n\r\n    @media (min-width: 1100px) {\r\n      align-items: center;\r\n    }\r\n\r\n    h1 {\r\n      font-weight: normal;\r\n      font: 600 3.6rem Poppins;\r\n      color: var(--color-text-title);\r\n      margin-bottom: 2.4rem;\r\n    }\r\n\r\n    .inputs {\r\n      background: var(--color-input-background);\r\n      border-radius: 0.8rem;\r\n      border: 1px solid var(--color-line-in-white);\r\n      margin-bottom: 1.4rem;\r\n    }\r\n\r\n    .login-options {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin-bottom: 3rem;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        font: 400 14px Poppins;\r\n        color: var(--color-text-complement);\r\n\r\n        opacity: 1;\r\n        transition: opacity 0.2s;\r\n\r\n        &:hover {\r\n          opacity: 0.6;\r\n        }\r\n      }\r\n    }\r\n\r\n    .submit-button {\r\n      width: 100%;\r\n      height: 5.6rem;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      border: 0;\r\n      outline: 0;\r\n      border-radius: 0.8rem;\r\n      color: var(--color-button-text);\r\n      background: var(--color-secundary);\r\n      margin-bottom: 4rem;\r\n      cursor: pointer;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: var(--color-secundary-dark);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  width: 100%;\r\n  max-width: 350px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  font: 400 16px Poppins;\r\n\r\n  @media (min-width: 1100px) {\r\n    align-items: center;\r\n  }\r\n\r\n  span {\r\n    max-width: 20rem;\r\n    color: var(--color-primary);\r\n\r\n    a {\r\n      font-weight: bold;\r\n      color: var(--color-primary);\r\n      opacity: 1;\r\n      transition: opacity 0.2s;\r\n\r\n      &:hover {\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n  }\r\n\r\n  span + span {\r\n    font-size: 1.4rem;\r\n    color: var(--color-text-complement);\r\n  }\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport Input from '../../components/InputFloatLabel';\r\nimport Checkbox from '../../components/Checkbox';\r\n\r\nimport { FormData, useAuth } from '../../contexts/auth';\r\n\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport heartIcon from '../../assets/images/icons/heart.svg';\r\n\r\nimport { LoginPage, LogoContent, LoginContent, Footer } from './styles';\r\n\r\nexport default function Login() {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { signIn } = useAuth();\r\n\r\n  const handleSubmit: SubmitHandler<FormData> = async (data) => {\r\n    try {\r\n      // Remove all previous errors\r\n      formRef.current?.setErrors({});\r\n\r\n      const schema = Yup.object().shape({\r\n        email: Yup.string().email().required('E-mail obrigatório'),\r\n        password: Yup.string().required('Senha obrigatória'),\r\n      });\r\n\r\n      await schema.validate(data, { abortEarly: false });\r\n\r\n      await signIn(data)\r\n\r\n    } catch (err) {\r\n      const validationErrors: any = {};\r\n\r\n      if (err instanceof Yup.ValidationError) {\r\n        // validation fails\r\n        err.inner.forEach((error) => {\r\n          validationErrors[error.path] = error.message;\r\n        });\r\n\r\n        formRef.current?.setErrors(validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginPage>\r\n      <LogoContent>\r\n        <div className=\"logo\">\r\n          <img src={logoImg} alt=\"Getgeeks\" />\r\n          <span>Conectando quem precisa com quem sabe fazer</span>\r\n        </div>\r\n      </LogoContent>\r\n\r\n      <LoginContent>\r\n        <Form ref={formRef} onSubmit={handleSubmit} className=\"login-form\">\r\n          <h1>Fazer login</h1>\r\n\r\n          <div className=\"inputs\">\r\n            <Input label=\"E-mail\" name=\"email\" type=\"email\" />\r\n            <Input label=\"Senha\" name=\"password\" type=\"password\" />\r\n          </div>\r\n\r\n          <div className=\"login-options\">\r\n            <Checkbox\r\n              name=\"checkbox\"\r\n              options={[{ id: 'yes', value: 'yes', label: 'Lembrar-me' }]}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Entrar\r\n          </button>\r\n        </Form>\r\n\r\n        <Footer>\r\n          <span>\r\n            Não tem conta? <Link to=\"/signup\">Cadastre-se</Link>\r\n          </span>\r\n\r\n          <span>\r\n            É de graça <img src={heartIcon} alt=\"Coração\" />\r\n          </span>\r\n        </Footer>\r\n      </LoginContent>\r\n    </LoginPage>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport background from '../../assets/images/bg-find.jpg';\r\n\r\nexport const SignUpPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    display: grid;\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-areas: 'content logo';\r\n  }\r\n\r\n  header {\r\n    margin: 0;\r\n    min-height: 5vh;\r\n    margin-bottom: -1rem;\r\n    width: 100%;\r\n    padding-left: 8vw;\r\n    background-color: var(--color-primary);\r\n    opacity: 1;\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n      grid-area: content;\r\n      align-self: flex-start;\r\n      width: 40vw;\r\n      background: none;\r\n      padding-left: 5rem;\r\n      max-width: 350px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogoContent = styled.div`\r\n  width: 100vw;\r\n  height: 35vh;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-color: var(--color-primary);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 1100px) {\r\n    grid-area: logo;\r\n    background-position: center;\r\n    background-size: cover;\r\n    height: 100vh;\r\n    width: 60vw;\r\n  }\r\n\r\n  .logo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    img {\r\n      width: 33rem;\r\n      margin-bottom: 0.8rem;\r\n    }\r\n\r\n    span {\r\n      font: 400 2.1rem Poppins;\r\n      color: var(--color-text-in-primary);\r\n      max-width: 20rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SignUpContent = styled.main`\r\n  width: 90vw;\r\n  height: 60vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    grid-area: content;\r\n    height: 100vh;\r\n    width: 40vw;\r\n    justify-content: center;\r\n  }\r\n\r\n  form {\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n    max-width: 350px;\r\n\r\n    @media (min-width: 1100px) {\r\n      align-items: center;\r\n    }\r\n\r\n    h1 {\r\n      font-weight: normal;\r\n      font: 600 3.6rem Poppins;\r\n      color: var(--color-text-title);\r\n      margin-bottom: 2.4rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      max-width: 33rem;\r\n\r\n      span {\r\n        font-weight: normal;\r\n        margin-top: 1rem;\r\n        font: 400 1.6rem Poppins;\r\n        color: var(--color-text-base);\r\n        max-width: 40rem;\r\n      }\r\n    }\r\n\r\n    .inputs {\r\n      background: var(--color-input-background);\r\n      border-radius: 0.8rem;\r\n      border: 1px solid var(--color-line-in-white);\r\n      margin-bottom: 2.4rem;\r\n    }\r\n\r\n    .submit-button {\r\n      width: 100%;\r\n      height: 5.6rem;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      border: 0;\r\n      border-radius: 0.8rem;\r\n      color: var(--color-button-text);\r\n      background: var(--color-secundary);\r\n      margin-bottom: 4rem;\r\n      cursor: pointer;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: var(--color-secundary-dark);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport Input from '../../components/InputFloatLabel';\r\n\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport backLightIcon from '../../assets/images/icons/back-light.svg';\r\n\r\nimport { SignUpPage, LogoContent, SignUpContent } from './styles';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\n\r\ninterface FormData {\r\n  name: string;\r\n  lastname: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit: SubmitHandler<FormData> = async (data) => {\r\n    try {\r\n      // Remove all previous errors\r\n      formRef.current?.setErrors({});\r\n\r\n      const schema = Yup.object().shape({\r\n        name: Yup.string().min(3, 'Informe pelo menos 3 caracteres').required('Cadê o seu nome?'),\r\n        lastname: Yup.string().min(3, 'Informe pelo menos 3 caracteres').required('E o sobrenome?'),\r\n        email: Yup.string().email('O email está estranho').required('O email é importante também!'),\r\n        password: Yup.string()\r\n          .min(6, 'Informe uma senha com pelo menos 6 caracteres')\r\n          .required('Agora só falta a senha!')\r\n      });\r\n\r\n      await schema.validate(data, { abortEarly: false });\r\n\r\n      // validation passed\r\n\r\n      const { name, lastname, email, password } = data;\r\n\r\n      await api.post('/users', {\r\n        name: `${name} ${lastname}`,\r\n        email,\r\n        password\r\n      })\r\n\r\n      history.push('/signup-success')\r\n\r\n    } catch (err) {\r\n      const validationErrors: any = {};\r\n\r\n      if (err instanceof Yup.ValidationError) {\r\n        // validation fails\r\n        err.inner.forEach((error) => {\r\n          validationErrors[error.path] = error.message;\r\n        });\r\n\r\n        formRef.current?.setErrors(validationErrors);\r\n      }\r\n\r\n      let message;\r\n\r\n      console.log(err.response)\r\n\r\n      if (err.response && err.response.data) {\r\n        let reason: any = err.response.data.error;\r\n        if (reason === 'User already exists')\r\n          message = 'Já temos um Geek com o email informado.'\r\n        else\r\n          message = 'Ocorreu um erro muito estranho!'\r\n\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: message,\r\n        })\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SignUpPage>\r\n      <header>\r\n        <Link to=\"/\">\r\n          <img src={backLightIcon} alt=\"Voltar\" />\r\n        </Link>\r\n      </header>\r\n      <LogoContent>\r\n        <div className=\"logo\">\r\n          <img src={logoImg} alt=\"Getgeeks\" />\r\n          <span>Conectando quem precisa com quem sabe fazer</span>\r\n        </div>\r\n      </LogoContent>\r\n      <SignUpContent>\r\n        <Form ref={formRef} onSubmit={handleSubmit} className=\"signup-form\">\r\n          <h1>\r\n            Cadastro\r\n            <span>Preencha os dados abaixo para começar.</span>\r\n          </h1>\r\n\r\n          <div className=\"inputs\">\r\n            <Input label=\"Nome\" name=\"name\" type=\"text\" />\r\n            <Input label=\"Sobrenome\" name=\"lastname\" type=\"text\" />\r\n            <Input label=\"E-mail\" name=\"email\" type=\"text\" />\r\n            <Input label=\"Senha\" name=\"password\" type=\"password\" />\r\n          </div>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Cadastrar\r\n          </button>\r\n        </Form>\r\n      </SignUpContent>\r\n    </SignUpPage>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport bg from '../../assets/images/bg.svg';\r\nimport bgLab from '../../assets/images/bg-lab.jpg';\r\nimport succesbg from '../../assets/images/success-background.svg';\r\n\r\nexport const SuccessPage = styled.div`\r\n  background: var(--color-primary);\r\n  background-size: cover;\r\n  background-image: url(${bgLab});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5vh 0vw;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SuccessContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-image: url(${bg});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    background-image: url(${succesbg});\r\n    background-size: contain;\r\n  }\r\n\r\n  img {\r\n    width: 12rem;\r\n    height: 12rem;\r\n    margin-bottom: 3rem;\r\n  }\r\n\r\n  h1 {\r\n    font: 700 5.4rem Archivo;\r\n    color: var(--color-title-in-primary);\r\n    text-align: center;\r\n    margin-bottom: 1.4rem;\r\n  }\r\n\r\n  p {\r\n    font: 400 1.6rem Poppins;\r\n    color: var(--color-text-in-primary);\r\n    text-align: center;\r\n    max-width: 400px;\r\n  }\r\n\r\n  a {\r\n    height: 5.6rem;\r\n    width: 100%;\r\n    max-width: 20rem;\r\n    background: var(--color-secundary);\r\n    color: var(--color-button-text);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    border: 0;\r\n    outline: 0;\r\n    border-radius: 0.8rem;\r\n    margin-top: 8rem;\r\n    text-decoration: none;\r\n    transition: background 0.2s;\r\n\r\n    &:hover {\r\n      background: var(--color-secundary-dark);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport successIcon from '../../assets/images/icons/success.svg';\r\n\r\nimport { SuccessPage, SuccessContent } from './styles';\r\n\r\ninterface SuccessProps {\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst Success: React.FC<SuccessProps> = ({ title, text }) => {\r\n  return (\r\n    <SuccessPage>\r\n      <SuccessContent>\r\n        <img src={successIcon} alt=\"Sucesso\" />\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n\r\n        <Link to={{ pathname: '/' }}>Voltar</Link>\r\n      </SuccessContent>\r\n    </SuccessPage>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import styled from 'styled-components';\r\nimport bg from '../../assets/images/bg.svg';\r\nimport bgLab from '../../assets/images/bg-lab.jpg';\r\nimport succesbg from '../../assets/images/success-background.svg';\r\n\r\nexport const SuccessPage = styled.div`\r\n  background: var(--color-primary);\r\n  background-size: cover;\r\n  background-image: url(${bgLab});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5vh 0vw;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SuccessContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-image: url(${bg});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    background-image: url(${succesbg});\r\n    background-size: contain;\r\n  }\r\n\r\n  img {\r\n    width: 12rem;\r\n    height: 12rem;\r\n    margin-bottom: 3rem;\r\n  }\r\n\r\n  h1 {\r\n    font: 700 5.4rem Archivo;\r\n    color: var(--color-title-in-primary);\r\n    text-align: center;\r\n    margin-bottom: 1.4rem;\r\n  }\r\n\r\n  p {\r\n    font: 400 1.6rem Poppins;\r\n    color: var(--color-text-in-primary);\r\n    text-align: center;\r\n    max-width: 400px;\r\n  }\r\n\r\n  a {\r\n    height: 5.6rem;\r\n    width: 100%;\r\n    max-width: 20rem;\r\n    background: var(--color-secundary);\r\n    color: var(--color-button-text);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    border: 0;\r\n    outline: 0;\r\n    border-radius: 0.8rem;\r\n    margin-top: 8rem;\r\n    text-decoration: none;\r\n    transition: background 0.2s;\r\n\r\n    &:hover {\r\n      background: var(--color-secundary-dark);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport successIcon from '../../assets/images/icons/success.svg';\r\n\r\nimport { SuccessPage, SuccessContent } from './styles';\r\n\r\ninterface SuccessProps {\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst Success: React.FC<SuccessProps> = ({ title, text }) => {\r\n  return (\r\n    <SuccessPage>\r\n      <SuccessContent>\r\n        <img src={successIcon} alt=\"Sucesso\" />\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n\r\n        <Link to={{ pathname: '/' }}>Voltar para home</Link>\r\n      </SuccessContent>\r\n    </SuccessPage>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Login from '../pages/Login';\r\nimport SignUp from '../pages/SignUp';\r\nimport Success from '../pages/Success';\r\nimport NotFound from '../pages/NotFound';\r\n\r\nconst SignRoutes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n        <Route\r\n          exact path=\"/signup-success\"\r\n          render={\r\n            (props) => (\r\n              <Success\r\n                title=\"Parabéns!\"\r\n                text=\"Agora você faz parte da Getgeeks. \r\n            Tenha uma ótima experiência.\"\r\n                {...props}\r\n              />\r\n            )}\r\n        />\r\n        <Route\r\n          exact path=\"*\"\r\n          render={\r\n            (props) => (\r\n              <NotFound\r\n                title=\"Oops!\"\r\n                text=\"A página que você esta procurando não existe ou está indisponível.\"\r\n                {...props}\r\n              />\r\n            )}\r\n        />\r\n      </Switch>\r\n\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default SignRoutes;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputBlock = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.4rem;\r\n\r\n  .error {\r\n    color: #ab3e3e;\r\n    font: 400 1.2rem Poppins;\r\n    margin: 0 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  label {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  input:focus {\r\n    border: 2px solid var(--color-primary-dark);\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 4.2rem;\r\n    margin-top: 0.8rem;\r\n    border-radius: 0.8rem;\r\n    background: var(--color-input-background);\r\n    border: 1px solid var(--color-line-in-white);\r\n    outline: 0;\r\n    padding: 0 1.6rem;\r\n    font: 400 1.6rem Archivo;\r\n  }\r\n`;\r\n","import React, { InputHTMLAttributes, useRef, useEffect } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { InputBlock } from './styles';\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  name: string;\r\n  value?: string;\r\n}\r\n\r\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\r\n\r\nconst Input: React.FC<InputProps> = ({ label, name, value = '', ...rest }) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { fieldName, defaultValue = value, registerField, error } = useField(\r\n    name\r\n  );\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <InputBlock>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={fieldName}\r\n        ref={inputRef}\r\n        defaultValue={defaultValue}\r\n        {...rest}\r\n      />\r\n\r\n      {error && <span className=\"error\">{error}</span>}\r\n    </InputBlock>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const TopBar = styled.header`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--color-primary-darker);\r\n  margin-bottom: 1.6rem;\r\n\r\n  .top-bar-container {\r\n    width: 90%;\r\n    height: 4.2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: var(--color-text-in-primary);\r\n\r\n    @media (min-width: 1100px) {\r\n      max-width: 1100px;\r\n    }\r\n\r\n    a {\r\n      height: 3.2rem;\r\n      display: flex;\r\n      align-items: center;\r\n      transition: opacity 0.2s;\r\n\r\n      &:hover {\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n\r\n    h1 {\r\n      margin-left: 25px;\r\n      font-weight: normal;\r\n      font: 600 1.6rem Archivo;\r\n    }\r\n\r\n    img {\r\n      height: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--color-primary);\r\n  margin: 0;\r\n  width: 100vw;\r\n  margin-bottom: 2.4rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .header-content {\r\n    position: relative;\r\n    margin: 3.2rem 1.6rem;\r\n\r\n    @media (min-width: 1100px) {\r\n      max-width: 740px;\r\n      width: 100%;\r\n      margin: 0 auto;\r\n      padding-bottom: 48px;\r\n    }\r\n\r\n    .content {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      .title {\r\n        max-width: 400px;\r\n\r\n        strong {\r\n          font: 700 3.6rem Archivo;\r\n          line-height: 4.2rem;\r\n          color: var(--color-title-in-primary);\r\n        }\r\n\r\n        p {\r\n          max-width: 30rem;\r\n          font-size: 1.6rem;\r\n          line-height: 2.6rem;\r\n          color: var(--color-text-in-primary);\r\n          margin-top: 2.4rem;\r\n        }\r\n      }\r\n\r\n      .message {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        img {\r\n          margin-right: 2.4rem;\r\n        }\r\n\r\n        span {\r\n          max-width: 10rem;\r\n          font: 400 1.2rem Poppins;\r\n          color: var(--color-text-in-primary);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport backIcon from '../../assets/images/icons/back-light.svg';\r\n\r\nimport { Header, TopBar } from './styles';\r\n\r\ninterface PageHeaderProps {\r\n  title?: string;\r\n  description?: string;\r\n  Message?: React.FC;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({\r\n  title,\r\n  description,\r\n  Message,\r\n  children,\r\n}) => {\r\n  const location = useLocation();\r\n  const [pageName, setPageName] = useState('');\r\n\r\n  useEffect(() => {\r\n    switch (location.pathname) {\r\n      case '/geeks':\r\n        setPageName('Geeks');\r\n        break;\r\n\r\n      case '/be-geek':\r\n        setPageName('Seja um Geek');\r\n        break;\r\n\r\n      case '/geek':\r\n        setPageName('Meu Perfil');\r\n        break;\r\n\r\n      default:\r\n        setPageName('');\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Header>\r\n      <TopBar>\r\n        <div className=\"top-bar-container\">\r\n          <Link to=\"/\">\r\n            <img src={backIcon} alt=\"Voltar\" />\r\n          </Link>\r\n\r\n          <h1>{pageName}</h1>\r\n\r\n          <img src={logoImg} alt=\"Getgeeks\" />\r\n        </div>\r\n      </TopBar>\r\n\r\n      <div className=\"header-content\">\r\n        <div className=\"content\">\r\n          <div className=\"title\">\r\n            {title && <strong>{title}</strong>}\r\n            {description && <p>{description}</p>}\r\n          </div>\r\n          {Message && <Message />}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\r\n\r\nexport const TextAreaBlock = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.4rem;\r\n\r\n  .error {\r\n    color: #ab3e3e;\r\n    font: 400 1.2rem Poppins;\r\n    margin: 0 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-top: 1.4rem;\r\n  }\r\n\r\n  label {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  textarea {\r\n    width: 100%;\r\n    height: 16rem;\r\n    min-height: 8rem;\r\n    margin-top: 0.8rem;\r\n    border-radius: 0.8rem;\r\n    background: var(--color-input-background);\r\n    border: 1px solid var(--color-line-in-white);\r\n    outline: 0;\r\n    resize: vertical;\r\n    padding: 1.2rem 1.6rem;\r\n    font: 1.6rem Archivo;\r\n  }\r\n\r\n  textarea:focus {\r\n    border: 2px solid var(--color-primary-dark);\r\n  }\r\n`;\r\n","import React, { TextareaHTMLAttributes, useRef, useEffect } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { TextAreaBlock } from './styles';\r\n\r\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  label: string;\r\n  name: string;\r\n  value?: string;\r\n}\r\n\r\nconst Textarea: React.FC<TextareaProps> = ({\r\n  label,\r\n  name,\r\n  value = '',\r\n  ...rest\r\n}) => {\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const { fieldName, defaultValue = value, registerField, error } = useField(\r\n    name\r\n  );\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: textAreaRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <TextAreaBlock>\r\n      <label htmlFor={name}>{label}</label>\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textAreaRef}\r\n        defaultValue={defaultValue}\r\n        {...rest}\r\n      />\r\n\r\n      {error && <span className=\"error\">{error}</span>}\r\n    </TextAreaBlock>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import styled from 'styled-components';\r\n\r\nexport const SelectBlock = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.4rem;\r\n\r\n  .error {\r\n    color: #ab3e3e;\r\n    font: 400 1.2rem Poppins;\r\n    margin: 0 0 10px 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  label {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  select:focus {\r\n    border: 2px solid var(--color-primary-dark);\r\n  }\r\n\r\n`;\r\n\r\nexport const MySelect = styled.select`\r\n  margin-top: 0.8rem;\r\n  padding: 0 1.6rem;\r\n  font: 400 1.6rem Archivo;\r\n\r\n  height: 4.2rem;\r\n  border-radius: 0.8rem;\r\n  outline: 0;\r\n  background: var(--color-input-background);\r\n  border: 1px solid var(--color-line-in-white);\r\n`;\r\n","import React, { SelectHTMLAttributes, useRef, useEffect } from 'react';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { SelectBlock, MySelect } from './styles';\r\n\r\ninterface Data {\r\n  value: number | string;\r\n  label: string;\r\n}\r\n\r\ninterface Props extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  label: string;\r\n  name: string;\r\n  options: Array<Data>;\r\n  value?: string | number;\r\n}\r\n\r\nconst Select: React.FC<Props> = ({\r\n  label,\r\n  name,\r\n  options,\r\n  value = '',\r\n  ...rest\r\n}) => {\r\n  const selectRef = useRef(null);\r\n  const { fieldName, defaultValue = value, registerField, error } = useField(\r\n    name\r\n  );\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <SelectBlock>\r\n      <label htmlFor={name}>{label}</label>\r\n\r\n      <MySelect\r\n        id={fieldName}\r\n        ref={selectRef}\r\n        defaultValue={defaultValue}\r\n        {...rest}\r\n      >\r\n        <option value=\"\" disabled hidden>\r\n          Selecione\r\n        </option>\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </MySelect>\r\n      {error && <span className=\"error\">{error}</span>}\r\n    </SelectBlock>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\nimport bg from '../../assets/images/Background.svg';\r\nimport camera from '../../assets/images/icons/camera.svg';\r\n\r\n\r\nexport const GeekPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const BG = styled.div`\r\n  height: 35rem;\r\n\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n`;\r\n\r\nexport const GeekContent = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const AvatarFieldset = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: -40rem;\r\n  position: sticky;\r\n\r\n  &::after {\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 50%;\r\n    content: '';\r\n    position: absolute;\r\n    background: var(--color-secundary);\r\n    background-image: url(${camera});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    margin-left: 12rem;\r\n    margin-bottom: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-top: -38rem;\r\n  }\r\n\r\n  img {\r\n    height: 18rem;\r\n    width: 18rem;\r\n    border-radius: 50%;\r\n    margin-bottom: 3.2rem;\r\n    position: relative;\r\n  }\r\n\r\n  h1 {\r\n    font: 700 3.6rem Archivo;\r\n    color: var(--color-title-in-primary);\r\n    margin-bottom: 0.6rem;\r\n  }\r\n\r\n  span {\r\n    font: 400 2.4rem Poppins;\r\n    color: var(--color-text-in-primary);\r\n    margin-bottom: 6.4rem;\r\n\r\n    @media (min-width: 1100px) {\r\n      margin-bottom: 3.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormFields = styled.div`\r\n  background: var(--color-box-base);\r\n  width: 100%;\r\n  max-width: 74rem;\r\n  border-radius: 0.8rem;\r\n  margin: 0 auto;\r\n  padding-top: 3.2rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-bottom: 3.2rem;\r\n  }\r\n\r\n  input[disabled], select[disabled], textarea[disabled] {\r\n    color: #DBDBDD\r\n  }\r\n\r\n  fieldset {\r\n    border: 0;\r\n    padding: 0 2.4rem;\r\n    padding-bottom: 2.4rem;\r\n\r\n    legend {\r\n      font: 700 2.4rem Archivo;\r\n      color: var(--color-text-title);\r\n      margin-bottom: 2.4rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding-bottom: 1.6rem;\r\n      border-bottom: 1px solid var(--color-line-in-white);\r\n\r\n      button {\r\n        background: none;\r\n        border: 0;\r\n        color: var(--color-primary);\r\n        font: 700 1.6rem Archivo;\r\n        cursor: pointer;\r\n        transition: color 0.2s;\r\n\r\n        &:hover {\r\n          color: var(--color-primary-dark);\r\n        }\r\n      }\r\n    }\r\n\r\n    .contactfields {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1.5fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .workfields {\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .fields {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormFooter = styled.footer`\r\n  padding: 4rem 2.4rem;\r\n  background: var(--color-box-footer);\r\n  border-top: 1px solid var(--color-line-in-white);\r\n  max-width: 74rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    padding: 4rem 6.4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .profile-alert-error {\r\n    color: #AB3E3E;\r\n  }\r\n\r\n  p {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    color: var(--color-text-complement);\r\n\r\n    @media (min-width: 1100px) {\r\n      justify-content: space-between;\r\n    }\r\n\r\n    img {\r\n      margin-right: 2rem;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    height: 5.6rem;\r\n    background: var(--color-secundary);\r\n    margin-top: 3.2rem;\r\n    border: 0;\r\n    outline: 0;\r\n    cursor: pointer;\r\n    border-radius: 0.8rem;\r\n    font: 700 1.6rem Archivo;\r\n    color: var(--color-button-text);\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: background-color 0.2s;\r\n\r\n    &:hover {\r\n      background-color: var(--color-secundary-dark);\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n      width: 20rem;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\n\r\nimport { Form } from '@unform/web';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport Input from '../../components/Input';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Textarea from '../../components/Textarea';\r\nimport Select from '../../components/Select';\r\n\r\nimport { UserData, useAuth } from '../../contexts/auth';\r\n\r\nimport {\r\n  GeekPage,\r\n  BG,\r\n  GeekContent,\r\n  AvatarFieldset,\r\n  FormFields,\r\n  FormFooter,\r\n} from './styles';\r\n\r\nimport warningIcon from '../../assets/images/icons/warning.svg';\r\nimport api from '../../services/api';\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\ninterface FormData {\r\n  name: string;\r\n  lastname: string;\r\n  email: string;\r\n  avatar: string;\r\n  whatsapp: string;\r\n  is_geek: boolean;\r\n  desc: string;\r\n  printer_repair: string;\r\n  work: string;\r\n  cost: number;\r\n}\r\n\r\nconst Geek: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const formRef = useRef<FormHandles>(null);\r\n  const [userData, setUserData] = useState({} as UserData);\r\n  const [alertError, setAlertError] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function getUserData() {\r\n      try {\r\n        const response = await api.get('/users');\r\n\r\n        setUserData(response.data);\r\n\r\n        // console.log(response.data)\r\n\r\n        formRef.current?.setData({\r\n          name: response.data?.name.split(' ')[0],\r\n          lastname: response.data?.name.split(' ')[1],\r\n          email: response.data?.email,\r\n          whatsapp: response.data?.whatsapp,\r\n          is_geek: response.data?.is_geek,\r\n          avatar: response.data?.avatar,\r\n          cost: response.data?.cost,\r\n          work: response.data?.work,\r\n          desc: response.data?.desc,\r\n          printer_repair: response.data?.printer_repair\r\n        });\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          sessionStorage.clear()\r\n          localStorage.clear()\r\n          window.location.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n    getUserData();\r\n  }, [user]);\r\n\r\n  const handleSubmit: SubmitHandler<FormData> = async (data) => {\r\n\r\n    const URL = /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/\r\n    const { avatar, email, name, lastname, whatsapp, is_geek, desc, printer_repair, work, cost } = data;\r\n\r\n    if (name.length <= 0)\r\n      return setAlertError('Informe o seu nome')\r\n\r\n    if (lastname.length <= 0)\r\n      return setAlertError('Informe o seu sobrenome')\r\n\r\n    if (whatsapp.length > 0 && whatsapp.length !== 11)\r\n      return setAlertError('Whatsapp com formato incorreto')\r\n\r\n    if (avatar.length > 0 && !URL.test(avatar))\r\n      return setAlertError('URL com formato inválido')\r\n\r\n    if (userData.is_geek) {\r\n      if (desc.length <= 0)\r\n        return setAlertError('Informe a descrição do seu perfil')\r\n\r\n      if (printer_repair.length <= 0)\r\n        return setAlertError('Por favor, informe se você é um Geek Supremo')\r\n\r\n      if (desc.length < 100 || desc.length > 250)\r\n        return setAlertError('A descrição deve ter entre 100 à 250 caracteres')\r\n\r\n      if (work.length <= 0)\r\n        return setAlertError('Escolhe um modelo de trabalho')\r\n\r\n      if (cost <= 0 || !cost)\r\n        return setAlertError('Informe o valor da sua hora')\r\n    }\r\n\r\n\r\n\r\n    if (name.length > 0 && lastname.length > 0) {\r\n      console.log(avatar)\r\n      api.put('/users', {\r\n        name: `${name} ${lastname}`,\r\n        email,\r\n        whatsapp,\r\n        avatar,\r\n        is_geek,\r\n      }).then(response => {\r\n        if (userData.is_geek) {\r\n          api.put('/geeks', {\r\n            desc,\r\n            printer_repair,\r\n            work,\r\n            cost\r\n          }).then(response => {\r\n            MySwal.fire({\r\n              icon: 'success',\r\n              title: 'Uhull',\r\n              text: 'Perfil geek atualizado com sucesso',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                window.location.reload()\r\n              } else if (result.isDenied) {\r\n                window.location.reload()\r\n              }\r\n            })\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Uhull',\r\n            text: 'Perfil atualizado com sucesso',\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload()\r\n            } else if (result.isDenied) {\r\n              window.location.reload()\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GeekPage>\r\n      <PageHeader>\r\n        <BG />\r\n      </PageHeader>\r\n\r\n      <GeekContent>\r\n        <Form ref={formRef} onSubmit={handleSubmit} className=\"profile-form\">\r\n          <AvatarFieldset>\r\n            <img\r\n              src={\r\n                userData?.avatar ||\r\n                `https://avatars.dicebear.com/api/initials/${userData?.name}.svg`\r\n              }\r\n              alt=\"avatar\"\r\n            />\r\n            <h1>{userData?.name}</h1>\r\n            <span>{userData.is_geek ? 'Geek' : 'Cliente'}</span>\r\n          </AvatarFieldset>\r\n\r\n          <FormFields>\r\n            <fieldset>\r\n              <legend>Seus dados</legend>\r\n              <div className=\"fields\">\r\n                <Input name=\"name\" label=\"Nome\" />\r\n                <Input name=\"lastname\" label=\"Sobrenome\" />\r\n              </div>\r\n\r\n              <div className=\"contactfields\">\r\n                <Input disabled\r\n                  className=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  label=\"E-mail\"\r\n                />\r\n                <Input type=\"number\" name=\"whatsapp\" label=\"Whatsapp\" />\r\n              </div>\r\n\r\n              <Input\r\n                className=\"avatar\"\r\n                type=\"text\"\r\n                name=\"avatar\"\r\n                label=\"Avatar URL\"\r\n              />\r\n            </fieldset>\r\n\r\n            {userData.is_geek &&\r\n              <fieldset>\r\n                <legend>Perfil Geek</legend>\r\n\r\n                <Textarea name=\"desc\" label=\"Descrição\" value={userData.desc} />\r\n\r\n                <div className=\"workfields\">\r\n\r\n                  <Select\r\n                    name=\"printer_repair\"\r\n                    value={userData.printer_repair}\r\n                    label=\"Conserta Impressora?\"\r\n                    options={[\r\n                      { value: '1', label: 'Sim' },\r\n                      { value: '0', label: 'Não' }\r\n                    ]}\r\n                  />\r\n\r\n                  <Select\r\n                    name=\"work\"\r\n                    value={userData.work}\r\n                    label=\"Modelo de trabalho\"\r\n                    options={[\r\n                      { value: 'Presencial', label: 'Presencial' },\r\n                      { value: 'Remoto', label: 'Remoto' },\r\n                      { value: 'Ambos', label: 'Ambos' }\r\n                    ]}\r\n                  />\r\n\r\n                  <Input name=\"cost\" label=\"Valor da sua hora\" value={userData.cost.toString()} />\r\n                </div>\r\n              </fieldset>\r\n            }\r\n\r\n            <FormFooter>\r\n              {alertError &&\r\n                <p className=\"profile-alert-error\">\r\n                  <img src={warningIcon} alt=\"Aviso importante\" />\r\n                  Atenção! <br />\r\n                  {alertError}\r\n                </p>\r\n              }\r\n              {!alertError &&\r\n                <p>\r\n                  <img src={warningIcon} alt=\"Aviso importante\" />\r\n                  Importante! <br />\r\n                  Preencha todos os dados corretamente\r\n                </p>\r\n              }\r\n              <button type=\"submit\">Salvar alterações</button>\r\n            </FormFooter>\r\n          </FormFields>\r\n        </Form>\r\n      </GeekContent>\r\n    </GeekPage>\r\n  );\r\n};\r\n\r\nexport default Geek;\r\n","import styled from 'styled-components';\r\n\r\nimport BG from '../../assets/images/bg-geek.png';\r\n\r\nexport const LandingPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  color: var(--color-text-in-primary);\r\n  background-image: url(${BG});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-color: var(--color-primary);\r\n  \r\n  @media (min-width: 1100px) {\r\n    overflow: hidden;\r\n  }\r\n\r\n  header {\r\n    display: flex;\r\n    width: 90vw;\r\n    height: 5vh;\r\n    justify-content: space-between;\r\n    margin: 2.4rem 0;\r\n    max-width: 1100px;\r\n\r\n    a {\r\n      text-decoration: none;\r\n      color: var(--color-text-in-primary);\r\n      font: 400 1.4rem/3rem Poppins;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: opacity 0.2s;\r\n\r\n      &:hover {\r\n        opacity: 0.6;\r\n      }\r\n\r\n      img {\r\n        width: 3.6rem;\r\n        height: 3.6rem;\r\n        border-radius: 8rem;\r\n        margin-right: 1.6rem;\r\n      }\r\n    }\r\n\r\n    button {\r\n      background: var(--color-primary-light);\r\n      border: 0;\r\n      outline: 0;\r\n      width: 3.6rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n\r\n      transition: opacity 0.2s;\r\n\r\n      &:hover {\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LandingContent = styled.div`\r\n  width: 90vw;\r\n  max-width: 700px;\r\n  height: 55vh;\r\n  \r\n  .logo-container {\r\n    text-align: center;\r\n    margin-bottom: 3.2rem;\r\n    margin-top: 12rem;\r\n\r\n    img {\r\n      height: 10rem;\r\n      max-width: 45rem;\r\n\r\n      @media (min-width: 1100px) {\r\n        height: 100%;\r\n      }\r\n    }\r\n\r\n    h2 {\r\n      font-weight: 500;\r\n      font-size: 2.4rem;\r\n      line-height: 4.6rem;\r\n      margin-top: 0.8rem;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  padding: 1.6rem 0;\r\n  width: 100vw;\r\n  height: 35vh;\r\n\r\n  font: 400 2rem Poppins;\r\n  color: var(--color-text-base);\r\n  background: var(--color-background);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    height: unset;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  @media (min-width: 1100px) {\r\n    max-width: 1100px;\r\n    display: grid;\r\n\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-areas: 'welcome total buttons';\r\n  }\r\n\r\n  .welcome {\r\n    display: flex;\r\n    text-align: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 1100px) {\r\n      grid-area: welcome;\r\n      align-self: center;\r\n      margin: 0;\r\n      text-align: left;\r\n    }\r\n\r\n    h1 {\r\n      font-weight: normal;\r\n      font: 600 2rem Poppins;\r\n    }\r\n  }\r\n\r\n  .buttons-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 3.2rem 0;\r\n\r\n    @media (min-width: 1100px) {\r\n      grid-area: buttons;\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    a {\r\n      width: 45vw;\r\n      max-width: 30rem;\r\n      height: 10.4rem;\r\n      border-radius: 0.8rem;\r\n      font: 700 2rem Archivo;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      text-decoration: none;\r\n      color: var(--color-button-text);\r\n\r\n      transition: background-color 0.2s;\r\n\r\n      @media (min-width: 1100px) {\r\n        font-size: 2.4rem;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1.6rem;\r\n      }\r\n\r\n      img {\r\n        width: 4rem;\r\n        margin-right: 2.4rem;\r\n      }\r\n    }\r\n\r\n    a.geeks {\r\n      background: var(--color-primary-lighter);\r\n\r\n      &:hover {\r\n        background: var(--color-primary-light);\r\n      }\r\n    }\r\n\r\n    a.be-geek, a.geek-profile {\r\n      background: var(--color-secundary);\r\n\r\n      &:hover {\r\n        background: var(--color-secundary-dark);\r\n      }\r\n    }\r\n  }\r\n\r\n  .slogan {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 1100px) {\r\n      grid-area: total;\r\n      margin-right: 5.3rem;\r\n      text-align: right;\r\n    }\r\n\r\n    span {\r\n      align-items: center;\r\n      font-size: 1.4rem;\r\n      color: var(--color-text-complement);\r\n    }\r\n\r\n    img {\r\n      margin-left: 0.8rem;\r\n      justify-self: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport logoImg from '../../assets/images/logo.svg';\r\n\r\nimport geeksIcon from '../../assets/images/icons/geeks.svg';\r\nimport addGeekIcon from '../../assets/images/icons/cube.svg';\r\nimport HeartIcon from '../../assets/images/icons/heart.svg';\r\nimport logoutIcon from '../../assets/images/icons/logout.svg';\r\n\r\nimport { LandingPage, LandingContent, Footer, Content } from './styles';\r\n\r\nfunction Landing() {\r\n  const { signOut, user } = useAuth();\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [geek, setGeek] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getUser() {\r\n\r\n      try {\r\n        const response = await api.get('/users');\r\n\r\n        if (response.data && response.data.desc) {\r\n          setGeek(true)\r\n        }\r\n\r\n        setAvatar(response.data.avatar);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          sessionStorage.clear()\r\n          localStorage.clear()\r\n          window.location.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n    getUser();\r\n  }, []);\r\n\r\n  async function handleLogOut() {\r\n    signOut();\r\n  }\r\n\r\n  return (\r\n    <LandingPage>\r\n      <header>\r\n        <Link to=\"/profile\" id=\"user\">\r\n          <img\r\n            src={\r\n              avatar ||\r\n              `https://avatars.dicebear.com/api/initials/${user?.name}.svg`\r\n            }\r\n            alt=\"Avatar de usuário\"\r\n          />\r\n          {user?.name}\r\n        </Link>\r\n        <button type=\"button\" onClick={handleLogOut}>\r\n          <img src={logoutIcon} alt=\"Sair\" />\r\n        </button>\r\n      </header>\r\n\r\n      <LandingContent>\r\n        <div className=\"logo-container\">\r\n          <img src={logoImg} alt=\"Getgeeks\" />\r\n          <h2>Conectando quem precisa com quem sabe fazer.</h2>\r\n        </div>\r\n\r\n        {/* <img src={landingImg} alt=\"Plataforma de estudos\" /> */}\r\n      </LandingContent>\r\n\r\n      <Footer>\r\n        <Content>\r\n          <div className=\"welcome\">\r\n            <span>Seja bem-vindo.</span>\r\n            <h1>O que deseja fazer?</h1>\r\n          </div>\r\n\r\n          <div className=\"buttons-container\">\r\n            <Link to=\"/geeks\" className=\"geeks\">\r\n              <img src={geeksIcon} alt=\"Geeks\" />\r\n              Geeks\r\n            </Link>\r\n\r\n            <Link to={geek ? '/profile' : '/be-geek'} className=\"be-geek\">\r\n              <img src={addGeekIcon} alt=\"Seja um Geek\" />\r\n              {geek ? 'Meu perfil' : 'Seja um Geek'}\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"slogan\">\r\n            <span>\r\n              Encontre um Geek<img src={HeartIcon} alt=\"Coração Roxo\" />\r\n            </span>\r\n          </div>\r\n        </Content>\r\n      </Footer>\r\n    </LandingPage>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import styled from 'styled-components';\r\n\r\ninterface DayElementProps {\r\n  readonly disabled: boolean;\r\n}\r\n\r\nexport const Item = styled.article`\r\n  background: var(--color-box-base);\r\n  border: 1px solid var(--color-line-in-white);\r\n  border-radius: 0.8rem;\r\n  margin-top: 2.4rem;\r\n  overflow: hidden;\r\n\r\n  p {\r\n    padding: 0 2rem;\r\n    font-size: 1.6rem;\r\n    line-height: 2.8rem;\r\n\r\n    @media (min-width: 1100px) {\r\n      padding: 0 3.2rem;\r\n    }\r\n  }\r\n\r\n  footer {\r\n    padding: 3.2rem 2rem;\r\n    background: var(--color-box-footer);\r\n    border-top: 1px solid var(--color-line-in-white);\r\n    margin-top: 3.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    @media (min-width: 1100px) {\r\n      padding: 3.2rem;\r\n    }\r\n\r\n    p strong {\r\n      color: var(--color-primary);\r\n      font-size: 1.6rem;\r\n      display: block;\r\n\r\n      @media (min-width: 1100px) {\r\n        display: initial;\r\n        margin-left: 1.6rem;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 20rem;\r\n      height: 5.6rem;\r\n      background: var(--color-button-wpp);\r\n      color: var(--color-button-text);\r\n      border: 0;\r\n      border-radius: 0.8rem;\r\n      cursor: pointer;\r\n      font: 700 1.4rem Archivo;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-evenly;\r\n      transition: 0.2s;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        background: var(--color-button-wpp-dark);\r\n      }\r\n\r\n      @media (min-width: 1100px) {\r\n        width: 24.5rem;\r\n        font-size: 1.6rem;\r\n        justify-content: center;\r\n      }\r\n\r\n      @media (min-width: 1100px) {\r\n        img {\r\n          margin-right: 1.6rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  padding: 3.2rem 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1100px) {\r\n    padding: 3.2rem;\r\n  }\r\n\r\n  img {\r\n    width: 8rem;\r\n    height: 8rem;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  div {\r\n    margin-left: 2.4rem;\r\n\r\n    strong {\r\n      font: 700 2.4rem Archivo;\r\n      display: block;\r\n      color: var(--color-text-title);\r\n    }\r\n\r\n    span {\r\n      font-size: 1.6rem;\r\n      display: block;\r\n      margin-top: 0.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\n// overflow-x: scroll;\r\n\r\nexport const DayList = styled.div`\r\n  display: flex;\r\n  margin: 3.2rem;\r\n  margin-bottom: 1.6rem;\r\n`;\r\n\r\nexport const DayElement = styled.div<DayElementProps>`\r\n  min-width: 14rem;\r\n  max-height: 15rem;\r\n  margin-right: 1.6rem;\r\n  margin-bottom: 1.6rem;\r\n  padding: 1.6rem;\r\n  border: 1px solid var(--color-line-in-white);\r\n  border-radius: 0.8rem;\r\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\r\n\r\n  span {\r\n    font: 400 1.2rem/2rem Poppins;\r\n    color: var(--color-text-complement);\r\n  }\r\n\r\n  h1 {\r\n    font-weight: normal;\r\n    font: 700 1.6rem/2.6rem Archivo;\r\n    color: var(--color-text-base);\r\n\r\n    &:first-of-type {\r\n      margin-bottom: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport whatsappIcon from '../../assets/images/icons/whatsapp.svg';\r\n\r\nimport { Item, Header } from './styles';\r\n\r\nexport interface Geek {\r\n  avatar: string;\r\n  desc: string;\r\n  cost: number;\r\n  id: number;\r\n  name: string;\r\n  work: string;\r\n  whatsapp: string;\r\n  printer_repair: string;\r\n}\r\n\r\ninterface GeekItemProps {\r\n  geek: Geek;\r\n}\r\n\r\nconst GeekItem: React.FC<GeekItemProps> = ({ geek }) => {\r\n  return (\r\n    <Item className=\"geek-item\">\r\n      <Header>\r\n        <img\r\n          src={\r\n            geek.avatar ||\r\n            `https://avatars.dicebear.com/api/initials/${geek?.name}.svg`\r\n          }\r\n          alt=\"Avatar\"\r\n        />\r\n        <div className=\"geek\">\r\n         {geek.printer_repair === \"Sim\" ? <strong>{geek.name} &#128125;</strong> : <strong>{geek.name}</strong> }\r\n          <span>\r\n            {geek.work === 'Ambos' ? 'Atendimento flex' : `Atendimento ${geek.work.toLowerCase()}`}\r\n          </span>\r\n        </div>\r\n      </Header>\r\n\r\n      <p>{geek.desc}</p>\r\n\r\n      <footer>\r\n        <p>\r\n          Valor/hora\r\n          <strong>R$ {geek.cost}</strong>\r\n        </p>\r\n        <a\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          href={`https://wa.me/${geek.whatsapp}`}\r\n        >\r\n          <img src={whatsappIcon} alt=\"Whatsapp\" />\r\n          Entrar em contato\r\n        </a>\r\n      </footer>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default GeekItem;\r\n","import styled from 'styled-components';\r\nimport { Form } from '@unform/web';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nexport const ListPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow-x: hidden;\r\n\r\n  .search-not-found {\r\n    margin-top: 4.2em;\r\n    text-align: center;\r\n  }\r\n\r\n  @media (max-width: 1101px) {\r\n    .search-not-found {\r\n      margin-top: 2.5em;\r\n      text-align: center;\r\n    } \r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const SearchGeek = styled(Form)`\r\n  margin-top: 4.8rem;\r\n  color: var(--color-text-in-primary);\r\n  font: 400 1.4rem Poppins;\r\n\r\n  @media (min-width: 1100px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 1fr;\r\n    grid-gap: 1.6rem;\r\n    align-items: center;\r\n    margin-bottom: -8.4rem;\r\n  }\r\n\r\n  button {\r\n    height: 4.2rem;\r\n    width: 100%;\r\n    margin-top: 2.4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--color-secundary);\r\n    color: var(--color-button-text);\r\n    font: 700 1.4rem Archivo;\r\n    border: 0;\r\n    outline: 0;\r\n    cursor: pointer;\r\n    border-radius: 0.8rem;\r\n    transition: background 0.2s;\r\n\r\n    &:hover {\r\n      background: var(--color-secundary-dark);\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n      margin-top: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const List = styled.main`\r\n  width: 100%;\r\n  max-width: 74rem;\r\n  margin-top: -4.6rem;\r\n  margin-bottom: 3.2rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const Pages = styled(Pagination)`\r\n  align-self: center;\r\n  justify-self: center;\r\n  margin-bottom: 2.4rem;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { SubmitHandler } from '@unform/core';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport GeekItem, { Geek } from '../../components/GeekItem';\r\nimport Input from '../../components/Input';\r\nimport Select from '../../components/Select';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { ListPage, SearchGeek, List, Pages } from './styles';\r\nimport emoji from '../../assets/images/icons/emoji.svg';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface FormData {\r\n  printer_repair: BigInt;\r\n  desc: string;\r\n}\r\n\r\nexport default function GeekList() {\r\n  const [geeks, setGeeks] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(1);\r\n  const [alertEmpty, setAlertEmpty] = useState(false);\r\n  const [searchNotFound, setSearchNotFound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadGeeks() {\r\n      try {\r\n        setSearchNotFound(false)\r\n        setAlertEmpty(false)\r\n  \r\n        const response = await api.get('geeks', {\r\n          params: {\r\n            page,\r\n          },\r\n        });\r\n  \r\n        if (response.data.Geeks.length <= 0)\r\n          setAlertEmpty(true)\r\n  \r\n        console.log(response.data.Count)\r\n  \r\n        setGeeks(response.data.Geeks);\r\n        setCount(response.data.Count);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          sessionStorage.clear()\r\n          localStorage.clear()\r\n          window.location.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n    loadGeeks();\r\n  }, [page]);\r\n\r\n  const searchGeeks: SubmitHandler<FormData> = async ({\r\n    printer_repair,\r\n    desc\r\n  }) => {\r\n    const params = {\r\n      printer_repair,\r\n      desc\r\n    }\r\n\r\n    setSearchNotFound(false)\r\n    setAlertEmpty(false)\r\n\r\n    const response = await api.get('/geeks', {\r\n      params\r\n    });\r\n\r\n    if (response.data.Geeks.length <= 0)\r\n      setSearchNotFound(true)\r\n\r\n    setGeeks(response.data.Geeks);\r\n    setCount(response.data.Count);\r\n  };\r\n\r\n  function handlePageCounter(pageNumber: number) {\r\n    setPage(pageNumber);\r\n  }\r\n\r\n  return (\r\n    <ListPage>\r\n      <PageHeader\r\n        title=\"Estes são os Geeks disponíveis.\"\r\n        Message={() => (\r\n          <div className=\"message\">\r\n            <img src={emoji} alt=\"emoji\" />\r\n            <span>{count} geeks disponíveis</span>\r\n          </div>\r\n        )}\r\n      >\r\n        <SearchGeek onSubmit={searchGeeks}>\r\n          <Select\r\n            name=\"printer_repair\"\r\n            label=\"Conserta impressora?\"\r\n            options={[\r\n              { value: 'Sim', label: 'Sim' },\r\n              { value: 'Não', label: 'Não' }\r\n            ]}\r\n          />\r\n          <Input type=\"text\" name=\"desc\" label=\"Busque por termo\" placeholder=\"Impressora, SSD, Wifi, etc...\" />\r\n\r\n          <button type=\"submit\">Buscar</button>\r\n        </SearchGeek>\r\n      </PageHeader>\r\n\r\n      <List>\r\n\r\n        {alertEmpty &&\r\n          <div className=\"search-not-found\">\r\n            <p>Nenhum Geek disponível, <Link to=\"/be-geek\">seja o primeiro</Link></p>\r\n          </div>\r\n        }\r\n\r\n        {searchNotFound &&\r\n          <div className=\"search-not-found\">\r\n            <p>Não encontramos Geeks com o(s) termo(s) informado na busca!</p>\r\n          </div>\r\n        }\r\n\r\n        {geeks.map((geek: Geek) => (\r\n          <GeekItem key={geek.id} geek={geek} />\r\n        ))}\r\n      </List>\r\n      {!searchNotFound && !alertEmpty &&\r\n        <Pages\r\n          count={count < 10 ? 1 : Math.ceil(count / 10)}\r\n          page={page}\r\n          size=\"large\"\r\n          onChange={(event, page) => handlePageCounter(page)}\r\n        />\r\n      }\r\n    </ListPage>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const GeekFormPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const PageContent = styled.main`\r\n  background: var(--color-box-base);\r\n  width: 100%;\r\n  max-width: 74rem;\r\n  border-radius: 0.8rem;\r\n  margin: -3.2rem auto 0 auto;\r\n  padding-top: 3.2rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-bottom: 3.2rem;\r\n  }\r\n`;\r\nexport const FormFields = styled.div`\r\n  background: var(--color-box-base);\r\n  width: 100%;\r\n  max-width: 74rem;\r\n  border-radius: 0.8rem;\r\n  margin: 0 auto;\r\n  padding-top: 3.2rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    margin-bottom: 3.2rem;\r\n  }\r\n\r\n  fieldset {\r\n    border: 0;\r\n    padding: 0 2.4rem;\r\n    padding-bottom: 2.4rem;\r\n\r\n    legend {\r\n      font: 700 2.4rem Archivo;\r\n      color: var(--color-text-title);\r\n      margin-bottom: 2.4rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding-bottom: 1.6rem;\r\n      border-bottom: 1px solid var(--color-line-in-white);\r\n\r\n      button {\r\n        background: none;\r\n        border: 0;\r\n        color: var(--color-primary);\r\n        font: 700 1.6rem Archivo;\r\n        cursor: pointer;\r\n        transition: color 0.2s;\r\n\r\n        &:hover {\r\n          color: var(--color-primary-dark);\r\n        }\r\n      }\r\n    }\r\n\r\n    .contactfields {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1.5fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .workfields {\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .fields {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      @media (min-width: 1100px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 16px;\r\n      }\r\n\r\n      input {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 16rem;\r\n\r\n        @media (min-width: 1100px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const FormFooter = styled.footer`\r\n  padding: 4rem 2.4rem;\r\n  background: var(--color-box-footer);\r\n  border-top: 1px solid var(--color-line-in-white);\r\n  max-width: 74rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    padding: 4rem 6.4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  p {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    color: var(--color-text-complement);\r\n\r\n    @media (min-width: 1100px) {\r\n      justify-content: space-between;\r\n    }\r\n\r\n    img {\r\n      margin-right: 2rem;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    height: 5.6rem;\r\n    background: var(--color-secundary);\r\n    margin-top: 3.2rem;\r\n    border: 0;\r\n    outline: 0;\r\n    cursor: pointer;\r\n    border-radius: 0.8rem;\r\n    font: 700 1.6rem Archivo;\r\n    color: var(--color-button-text);\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: background-color 0.2s;\r\n\r\n    &:hover {\r\n      background-color: var(--color-secundary-dark);\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n      width: 20rem;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Input from '../../components/Input';\r\nimport Textarea from '../../components/Textarea';\r\nimport Select from '../../components/Select';\r\n\r\nimport warningIcon from '../../assets/images/icons/warning.svg';\r\n\r\nimport { GeekFormPage, PageContent, FormFields, FormFooter } from './styles';\r\nimport rocket from '../../assets/images/icons/rocket.svg';\r\n\r\ninterface FormData {\r\n  whatsapp: string;\r\n  desc: string;\r\n  printer_repair: string;\r\n  work: string;\r\n  cost: number;\r\n}\r\n\r\nexport default function GeekForm() {\r\n  const history = useHistory();\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  useEffect(() => {\r\n    async function goHorse() {\r\n      try {\r\n        await api.get('users');\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          sessionStorage.clear()\r\n          localStorage.clear()\r\n          window.location.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n    goHorse();\r\n  }, []);\r\n\r\n\r\n  const handleSubmit: SubmitHandler<FormData> = async (data) => {\r\n    try {\r\n      formRef.current?.setErrors({});\r\n\r\n      const zapRequired = 'O Whatsapp deve ter 11 digitos contando com o DDD'\r\n\r\n      const schema = Yup.object().shape({\r\n        whatsapp: Yup.string()\r\n          .min(11, zapRequired)\r\n          .max(11, zapRequired),\r\n        desc: Yup.string()\r\n          .min(80, 'A descrição deve ter no minimo 80 caracteres')\r\n          .max(255, 'A descrição deve ter no máximo 255 caracteres')\r\n          .required('Informe a descrição do seu trabalho'),\r\n        printer_repair: Yup.string().required('Por favor, informe se você é um Geek Supremo'),\r\n        work: Yup.string().required('Por favor, selecione o modelo de trabalho'),\r\n        cost: Yup.number()\r\n          .typeError('Valor hora deve ser numérico')\r\n          .required('Informe quanto deseja ganhar por hora'),\r\n      });\r\n\r\n      await schema.validate(data, {\r\n        abortEarly: false,\r\n      });\r\n\r\n      const { whatsapp, desc, printer_repair, work, cost } = data;\r\n\r\n      await api.post('/geeks', {\r\n        whatsapp,\r\n        desc,\r\n        printer_repair,\r\n        work,\r\n        cost\r\n      });\r\n\r\n      history.push('/be-geek-success');\r\n    } catch (err) {\r\n      const validationErrors: any = {};\r\n\r\n      if (err instanceof Yup.ValidationError) {\r\n        // validation fails\r\n        err.inner.forEach((error) => {\r\n          validationErrors[error.path] = error.message;\r\n        });\r\n\r\n        formRef.current?.setErrors(validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GeekFormPage>\r\n      <PageHeader\r\n        title=\"Trabalhe com suporte técnico quando e onde quiser\"\r\n        description=\"Preencha seu perfil geek e ganhe novos clientes pelo whatsapp\"\r\n        Message={() => (\r\n          <div className=\"message\">\r\n            <img src={rocket} alt=\"foguete\" />\r\n            <span>Presencial ou remoto em todo o Brasil</span>\r\n          </div>\r\n        )}\r\n      />\r\n\r\n      <PageContent>\r\n        <Form ref={formRef} onSubmit={handleSubmit} className=\"be-geek-form\">\r\n          <FormFields>\r\n            <fieldset>\r\n              <legend>Contato</legend>\r\n              <div className=\"contactfields\">\r\n                <Input type=\"number\" name=\"whatsapp\" label=\"Whatsapp\" />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend>O que você está disposto a fazer?</legend>\r\n\r\n              <Textarea name=\"desc\" label=\"Descrição\" />\r\n\r\n              <div className=\"workfields\">\r\n\r\n                <Select\r\n                  name=\"printer_repair\"\r\n                  label=\"Conserta Impressora?\"\r\n                  options={[\r\n                    { value: 'Sim', label: 'Sim' },\r\n                    { value: 'Não', label: 'Não' }\r\n                  ]}\r\n                />\r\n\r\n                <Select\r\n                  name=\"work\"\r\n                  label=\"Modelo de trabalho\"\r\n                  options={[\r\n                    { value: 'Presencial', label: 'Presencial' },\r\n                    { value: 'Remoto', label: 'Remoto' },\r\n                    { value: 'Ambos', label: 'Ambos' }\r\n                  ]}\r\n                />\r\n\r\n                <Input name=\"cost\" label=\"Valor da sua hora\" />\r\n              </div>\r\n            </fieldset>\r\n\r\n            <FormFooter>\r\n              <p>\r\n                <img src={warningIcon} alt=\"Aviso importante\" />\r\n                Importante! <br />\r\n                Preencha todos os dados corretamente\r\n              </p>\r\n              <button type=\"submit\">Quero ser um Geek</button>\r\n            </FormFooter>\r\n          </FormFields>\r\n        </Form>\r\n      </PageContent>\r\n    </GeekFormPage>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Profile from '../pages/Profile';\r\nimport Landing from '../pages/Landing';\r\nimport GeekList from '../pages/GeekList';\r\nimport GeekForm from '../pages/GeekForm';\r\nimport Success from '../pages/Success';\r\nimport NotFound from '../pages/NotFound';\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route exact path=\"/landing\" component={Landing} />\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n        <Route exact path=\"/geeks\" component={GeekList} />\r\n        <Route exact path=\"/be-geek\" component={GeekForm} />\r\n        <Route\r\n          exact path=\"/be-geek-success\"\r\n          render={(props) => (\r\n            <Success\r\n              title=\"Parabéns!\"\r\n              text=\"Seu cadastro está na nossa lista de geeks.\r\n            Agora é só ficar de olho no seu WhatsApp.\"\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact path=\"*\"\r\n          render={\r\n            (props) => (\r\n              <NotFound\r\n                title=\"Oops!\"\r\n                text=\"A página que você esta procurando não existe ou está indisponível.\"\r\n                {...props}\r\n              />\r\n            )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React from 'react';\r\n\r\nimport { useAuth } from '../contexts/auth';\r\n\r\nimport SignRoutes from './sign.routes';\r\nimport AuthRoutes from './auth.routes';\r\n\r\nconst Routes: React.FC = () => {\r\n  const { signed } = useAuth();\r\n  // console.log(signed)\r\n  return signed ? <AuthRoutes /> : <SignRoutes />;\r\n};\r\n\r\nexport default Routes;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    font-size: 60%;\r\n\r\n    --color-background: #f0f0f7;\r\n    --color-primary-lighter: #413e70;\r\n    --color-primary-light: #292747;\r\n    --color-primary: #2f2d51;\r\n    --color-primary-dark: #413e70;\r\n    --color-primary-darker: #292747;\r\n    --color-secundary: #e3a052;\r\n    --color-secundary-dark: #ce8a3b;\r\n    --color-title-in-primary: #ffffff;\r\n    --color-text-in-primary: #e3a052;\r\n    --color-text-title: #32264d;\r\n    --color-text-complement: #9c98a6;\r\n    --color-text-base: #6a6180;\r\n    --color-line-in-white: #e6e6f0;\r\n    --color-input-background: #f8f8fc;\r\n    --color-button-text: #ffffff;\r\n    --color-box-base: #ffffff;\r\n    --color-box-footer: #fafafc;\r\n    --color-button-wpp-dark: #219653;\r\n    --color-button-wpp: #27ae60;\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: var(--color-background);\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .swal2-popup {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .swal2-styled.swal2-confirm {\r\n    background-color: #413e70;\r\n  }\r\n\r\n  .swal2-styled {\r\n    box-shadow: 0 0 0 3px #413e70;\r\n  }\r\n\r\n\r\n  body,\r\n  input,\r\n  button,\r\n  textarea {\r\n    font: 500 1.6rem Poppins;\r\n    color: var(--color-text-base);\r\n  }\r\n\r\n  button{\r\n    outline: 0;\r\n  }\r\n\r\n  @media (min-width: 1100px) {\r\n    :root {\r\n      font-size: 62.5%;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\n\r\nimport Routes from './routes';\r\nimport GlobalStyle from './styles/Global';\r\nimport { AuthProvider } from './contexts/auth';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <GlobalStyle />\r\n      <Routes />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.7ca85960.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.ec786dd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.36b00e08.svg\";","module.exports = __webpack_public_path__ + \"static/media/back-light.4a5e6b95.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.d75b8490.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.362ba354.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-lab.def3675a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/success-background.26588df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/showPass.047af183.svg\";","module.exports = __webpack_public_path__ + \"static/media/hidePass.4120d6b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-geeks.66d3cea1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg-find.cf1f114e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Background.610ca89a.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.2039c00d.svg\";","module.exports = __webpack_public_path__ + \"static/media/geeks.399c781c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cube.65440056.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.ef0adb71.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-geek.6d4fd959.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.c2ffa8a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/emoji.a0e42cc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.52576095.svg\";"],"sourceRoot":""}